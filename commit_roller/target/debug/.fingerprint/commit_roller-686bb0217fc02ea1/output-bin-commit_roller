{"message":"unused imports: `FixedOffset`, `Utc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/roller/gitlog.rs","byte_start":142,"byte_end":153,"line_start":3,"line_end":3,"column_start":44,"column_end":55,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Datelike, Duration, FixedOffset, Utc, TimeZone, Local};","highlight_start":44,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/roller/gitlog.rs","byte_start":155,"byte_end":158,"line_start":3,"line_end":3,"column_start":57,"column_end":60,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Datelike, Duration, FixedOffset, Utc, TimeZone, Local};","highlight_start":57,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/roller/gitlog.rs","byte_start":140,"byte_end":158,"line_start":3,"line_end":3,"column_start":42,"column_end":60,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Datelike, Duration, FixedOffset, Utc, TimeZone, Local};","highlight_start":42,"highlight_end":60}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `FixedOffset`, `Utc`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/roller/gitlog.rs:3:44\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse chrono::{DateTime, Datelike, Duration, FixedOffset, Utc, TimeZone, Local};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `super::gitlog::LogContext`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/roller/stash.rs","byte_start":29,"byte_end":54,"line_start":3,"line_end":3,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"use super::gitlog::LogContext;","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/roller/stash.rs","byte_start":25,"byte_end":55,"line_start":3,"line_end":3,"column_start":1,"column_end":31,"is_primary":true,"text":[{"text":"use super::gitlog::LogContext;","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `super::gitlog::LogContext`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/roller/stash.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse super::gitlog::LogContext;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `BufRead`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/roller/gitlog.rs","byte_start":69,"byte_end":76,"line_start":1,"line_end":1,"column_start":70,"column_end":77,"is_primary":true,"text":[{"text":"use std::{path::PathBuf, process::Command, fs::File, io::{BufReader, BufRead, Write, BufWriter}};","highlight_start":70,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `BufRead`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/roller/gitlog.rs:1:70\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::{path::PathBuf, process::Command, fs::File, io::{BufReader, BufRead, Write, BufWriter}};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\n"}
{"message":"unused variable: `next_day`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/roller/gitlog.rs","byte_start":2998,"byte_end":3006,"line_start":100,"line_end":100,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let next_day = date + Duration::days(1);","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/roller/gitlog.rs","byte_start":2998,"byte_end":3006,"line_start":100,"line_end":100,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let next_day = date + Duration::days(1);","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"_next_day","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `next_day`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/roller/gitlog.rs:100:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let next_day = date + Duration::days(1);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_next_day`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `repo_dir`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/roller/stash.rs","byte_start":74,"byte_end":82,"line_start":5,"line_end":5,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"pub fn stash_all(repo_dir: &PathBuf, out_dir: &PathBuf, commit_context_json: &PathBuf) {","highlight_start":18,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/roller/stash.rs","byte_start":74,"byte_end":82,"line_start":5,"line_end":5,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"pub fn stash_all(repo_dir: &PathBuf, out_dir: &PathBuf, commit_context_json: &PathBuf) {","highlight_start":18,"highlight_end":26}],"label":null,"suggested_replacement":"_repo_dir","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `repo_dir`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/roller/stash.rs:5:18\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn stash_all(repo_dir: &PathBuf, out_dir: &PathBuf, commit_context_json: &PathBuf) {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_repo_dir`\u001b[0m\n\n"}
{"message":"unused variable: `out_dir`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/roller/stash.rs","byte_start":94,"byte_end":101,"line_start":5,"line_end":5,"column_start":38,"column_end":45,"is_primary":true,"text":[{"text":"pub fn stash_all(repo_dir: &PathBuf, out_dir: &PathBuf, commit_context_json: &PathBuf) {","highlight_start":38,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/roller/stash.rs","byte_start":94,"byte_end":101,"line_start":5,"line_end":5,"column_start":38,"column_end":45,"is_primary":true,"text":[{"text":"pub fn stash_all(repo_dir: &PathBuf, out_dir: &PathBuf, commit_context_json: &PathBuf) {","highlight_start":38,"highlight_end":45}],"label":null,"suggested_replacement":"_out_dir","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `out_dir`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/roller/stash.rs:5:38\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn stash_all(repo_dir: &PathBuf, out_dir: &PathBuf, commit_context_json: &PathBuf) {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_out_dir`\u001b[0m\n\n"}
{"message":"unused variable: `commit_context_json`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/roller/stash.rs","byte_start":113,"byte_end":132,"line_start":5,"line_end":5,"column_start":57,"column_end":76,"is_primary":true,"text":[{"text":"pub fn stash_all(repo_dir: &PathBuf, out_dir: &PathBuf, commit_context_json: &PathBuf) {","highlight_start":57,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/roller/stash.rs","byte_start":113,"byte_end":132,"line_start":5,"line_end":5,"column_start":57,"column_end":76,"is_primary":true,"text":[{"text":"pub fn stash_all(repo_dir: &PathBuf, out_dir: &PathBuf, commit_context_json: &PathBuf) {","highlight_start":57,"highlight_end":76}],"label":null,"suggested_replacement":"_commit_context_json","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `commit_context_json`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/roller/stash.rs:5:57\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn stash_all(repo_dir: &PathBuf, out_dir: &PathBuf, commit_context_json: &PathBuf) {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_commit_context_json`\u001b[0m\n\n"}
{"message":"7 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 7 warnings emitted\u001b[0m\n\n"}
